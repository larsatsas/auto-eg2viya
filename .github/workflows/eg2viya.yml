# This is a basic workflow to support move from SAS 9.4 Enterprise Guide to SAS Viya studio flows

name: Automate move of Enterprise Guide to SAS Viya

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Setting up a workflow to prepare-target, import content, and validate content on the target environment
jobs:
  # This workflow contains 3 jobs
  prepare-target:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: cleanup-target
        run: |
          echo Preparing target environment
          export REQUESTS_CA_BUNDLE=~/.certs/target_trustedcerts.pem
          /opt/pyviyatools/loginviauthinfo.py
          # the egprojects that were imported
          /opt/pyviyatools/deletecontent.py -f /Public/exported -i -q || exit_code=$?
          echo $exit_code

      - name: prepare-target
        run: |
          echo Preparing target environment
          # setup startup and autoexec for compute, batch and sas studio
          echo "Configure startup and autoexec for compute and batch as well as fileshare in sas studio"
          sas-viya configuration configurations update --file PSGEL270-RACE/config/compute-startup_commands.json
          sas-viya configuration configurations update --file PSGEL270-RACE/config/compute-autoexec.json
          sas-viya configuration configurations update --file PSGEL270-RACE/config/batch-autoexec.json
          sas-viya configuration configurations update --file PSGEL270-RACE/config/update_studio.json

  import:
    needs:
      - prepare-target
    # The type of runner that the job will run on
    runs-on: self-hosted
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: import-EGProjects
        run: |
          echo Import EG project to SAS Viya from the git repo
          chmod +x PSGEL270-RACE/utilities/importEGProjects
          PSGEL270-RACE/utilities/importEGProjects --sas-viya-path /usr/bin/sas-viya --source-file "exported/list_of_Enterprise_Guide_Projects.csv" --root-folder "Public"

  validate:
    needs:
      - import
    # The type of runner that the job will run on
    runs-on: self-hosted
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v3  
      - name: import-validation-data
        run: |
          # test data
          sudo cp exported/data/financials.sas7bdat /shared/gelcontent/gelcorp/finance/data
          #expected results to compare against
          sudo rm -rf /shared/gelcontent/gelcorp/expected/
          sudo mkdir /shared/gelcontent/gelcorp/expected/
          sudo cp exported/data/facility_state.sas7bdat /shared/gelcontent/gelcorp/expected
          sudo cp exported/data/lookup_facility_name.sas7bdat /shared/gelcontent/gelcorp/expected
          sudo cp exported/data/productline.sas7bdat /shared/gelcontent/gelcorp/expected

      - name: validate-EGimport
        run: |
          echo Validate what we just imported
          # Generate SAS code from the imported EG job that turned into a flow, so that we can test it
          /opt/pyviyatools/callrestapi.py -m post -e /studioDevelopment/code/ -c "application/json" -i PSGEL270-RACE/config/Lookup_refresh.json -a "application/vnd.sas.code.generation.request+json" -o json | jq -r '.code' > code.sas
          sas-viya batch jobs submit-pgm --pgm-path code.sas --context default --watch-output --wait-log-list
          # test against expected results
          sas-viya batch jobs submit-pgm --pgm-path PSGEL270-RACE/flowsFromEG/testing/testLookup_Refresh.sas --context default --watch-output --wait-log-list
